<Page
    x:Class="ItemChecker.Views.BuyOrdersPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ItemChecker.Views"
    xmlns:vm="using:ItemChecker.ViewModels"
    xmlns:conv="using:ItemChecker.Converter"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=vm:BuyOrderViewModel}">
    <Page.Resources>
        <conv:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
        <conv:ActionStatusConverter x:Key="ActionStatusConverter"/>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--Actions-->
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Items:" FontSize="16" VerticalAlignment="Center" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                <TextBlock Text="{Binding Items.Count}" FontSize="16" Margin="3 0 4 0" VerticalAlignment="Center" Style="{ThemeResource SubtitleTextBlockStyle}"/>
            </StackPanel>
            <CommandBar HorizontalAlignment="Left" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right">
                <AppBarSeparator/>
                <AppBarButton Label="Info">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE946;"/>
                    </AppBarButton.Icon>
                    <AppBarButton.Flyout>
                        <Flyout Placement="Bottom">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="Information" Margin="0,0,0,12" Grid.ColumnSpan="2"/>
                                <ItemsControl Grid.Row="1" ItemsSource="{Binding Info, Mode=TwoWay}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Vertical"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="120" Width="auto"/>
                                                    <ColumnDefinition MinWidth="25"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Key}" Grid.Column="0"/>
                                                <TextBlock Text="{Binding Value}" Grid.Column="1" HorizontalAlignment="Right" Margin="10 0 0 0" Foreground="{ThemeResource TextFillColorSecondaryBrush}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarSeparator/>
                <AppBarButton Icon="Refresh" Label="Refresh" Command="{Binding RefreshCommand}"/>
                <AppBarButton Icon="Clear" Label="Cancel all">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All orders will be cancelled. Do you want to continue?" Margin="0,0,0,12" />
                                <Button Content="Yes, clear my buy orders" Command="{Binding CancelAllCommand}"/>
                            </StackPanel>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar>
        </StackPanel>
        <CommandBar HorizontalAlignment="Right" Background="Transparent" IsOpen="False" DefaultLabelPosition="Right">
            <AppBarButton Icon="Stop" Label="Stop" Command="{Binding StopCommand}" Visibility="{Binding LoadingBar.IsBusy}"/>
            <AppBarButton Icon="Play" Label="Push" Click="Push_Click" Visibility="{Binding LoadingBar.IsBusy, Converter={StaticResource BooleanReverseConverter}}"/>
            <AppBarToggleButton Label="Queue" Click="ItemsToggle_Click" x:Name="ItemsBtn" IsEnabled="{Binding LoadingBar.IsBusy, Converter={StaticResource BooleanReverseConverter}}">
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="&#xE9D5;"/>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>
        </CommandBar>
        <!--Body-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <!--DataGrid-->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <!--RowInfo-->
                    <DataTemplate x:Key="RowDetailsTemplate">
                        <StackPanel Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
                            <Grid Padding="15">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{Binding Image}"/>
                                    <Grid Grid.Column="1" Margin="15 0 0 0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Margin="0 0 10 0">
                                            <StackPanel.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <TextBlock Text="Difference ($): "/>
                                            <TextBlock Text="Count: "/>
                                            <TextBlock Text="Pushed: "/>
                                        </StackPanel>
                                        <StackPanel Grid.Column="1" HorizontalAlignment="Left">
                                            <TextBlock Text="{Binding Difference}"/>
                                            <TextBlock Text="{Binding Count}"/>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Pushed}" Margin="0 0 10 0"/>
                                                <TextBlock Text="Not enough available amount. Can't push." Foreground="Red" Visibility="{Binding Impossible}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <Button HorizontalAlignment="Right" VerticalAlignment="Top" Content="Cancel" Style="{ThemeResource AccentButtonStyle}" Command="{Binding CancelOrderCommand}"
                                            IsEnabled="{Binding IsCanceled, Converter={StaticResource ActionStatusConverter}, ConverterParameter=0}"/>
                                    <TextBlock Text="{Binding IsCanceled, Converter={StaticResource ActionStatusConverter}, ConverterParameter=1}" Margin="0 5 5 0" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </Grid.Resources>
                <controls:DataGrid x:Name="dataGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                       HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" AlternatingRowBackground="{ThemeResource SurfaceStrokeColorFlyoutBrush}" IsEnabled="True"
                                       AlternatingRowForeground="{ThemeResource AppBarItemForegroundThemeBrush}" AreRowDetailsFrozen="True" ItemsSource="{Binding Items}"
                                        AreRowGroupHeadersFrozen="False" DoubleTapped="dataGrid_DoubleTapped" KeyDown="dataGrid_KeyDown"
                                        AutoGenerateColumns="False"
                                        CanUserSortColumns="True" Sorting="dataGrid_Sorting"
                                        CanUserReorderColumns="False"
                                        CanUserResizeColumns="False"
                                        ColumnHeaderHeight="32"
                                        MaxColumnWidth="400"
                                        FrozenColumnCount="0"
                                        GridLinesVisibility="All"
                                        HeadersVisibility="Column"
                                        IsReadOnly="True"
                                        RowDetailsTemplate="{StaticResource RowDetailsTemplate}"
                                        RowDetailsVisibilityMode="VisibleWhenSelected"
                                        SelectionMode="Single"
                                        RowGroupHeaderPropertyNameAlternative="Range">
                    <controls:DataGrid.Columns>
                        <controls:DataGridTextColumn Header="ItemName" Binding="{Binding ItemName}" Tag="ItemName" MinWidth="320"/>
                        <controls:DataGridTextColumn Header="Purchase" Binding="{Binding OrderPrice}" Tag="OrderPrice"/>
                        <controls:DataGridTextColumn Header="Price ($)" Binding="{Binding ServicePrice}" Tag="ServicePrice"/>
                        <controls:DataGridTextColumn Header="Get ($)" Binding="{Binding ServiceGive}" Tag="ServiceGive"/>
                        <controls:DataGridTextColumn Header="Precent (%)" Binding="{Binding Precent}" Tag="Precent"/>
                    </controls:DataGrid.Columns>
                </controls:DataGrid>
                <!--Loading-->
                <Grid Visibility="{Binding LoadingBar.IsBusy}">
                    <Grid Background="Black" Opacity="0.5"/>
                    <InfoBar IsOpen="True" Severity="Informational" Title="{Binding LoadingBar.Title}" Message="{Binding LoadingBar.Message}" DoubleTapped="InfoBar_DoubleTapped"
                             VerticalAlignment="Center" HorizontalAlignment="Center" IsClosable="False" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                        <ProgressBar Margin="-45 0 0 0" IsIndeterminate="True"/>
                    </InfoBar>
                </Grid>
                <!--Filter-->
                <AutoSuggestBox Grid.Row="2" PlaceholderText="Type a item name" TextChanged="AutoSuggestBox_TextChanged" QueryIcon="Find" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0 8 0 8"
                                IsEnabled="{Binding LoadingBar.IsBusy, Converter={StaticResource BooleanReverseConverter}}"/>
            </Grid>
            <!--Queue-->
            <Grid Grid.Column="1" CornerRadius="{ThemeResource ControlCornerRadius}" Background="{ThemeResource CardBackgroundFillColorDefaultBrush}" BorderThickness="1"
                  BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" Padding="6" HorizontalAlignment="Stretch" MaxWidth="430" Margin="10 0 0 0" x:Name="ItemsPage" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--Info-->
                <InfoBar IsOpen="True" Title="Queue (Optional)" Message="Items for which a purchase order will be placed. Will be skipped if a different service is selected." HorizontalAlignment="Stretch" Margin="0 0 0 5"/>
                <Grid Grid.Row="1" Margin="4">
                    <TextBlock Text="Service:" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock Text="{Binding QueueService}" HorizontalAlignment="Right"/>
                </Grid>
                <!--List-->
                <ListView Grid.Row="2" AllowDrop="True" SelectionMode="Single" CanReorderItems="False" ItemsSource="{Binding Queue, Mode=TwoWay}">
                    <ListView.Header>
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Found:" FontSize="14" Style="{ThemeResource SubtitleTextBlockStyle}" Margin="5 0 3 0"/>
                                <TextBlock Text="{Binding Queue.Count}" FontSize="14" Style="{ThemeResource SubtitleTextBlockStyle}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button VerticalAlignment="Bottom" Height="29" Width="40" ToolTipService.ToolTip="Delete all" Style="{StaticResource CommandBarFlyoutEllipsisButtonStyle}">
                                    <Button.Content>
                                        <FontIcon Glyph="&#xEA99;" FontSize="11"/>
                                    </Button.Content>
                                    <Button.Flyout>
                                        <Flyout Placement="Left">
                                            <StackPanel>
                                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All items will be removed from the list." Margin="0,0,0,12" />
                                                <Button Content="Delete" Command="{Binding ClearListCommand}"/>
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </ListView.Header>
                </ListView>
            </Grid>
        </Grid>
        <!--Message-->
        <TeachingTip PreferredPlacement="Top" IsLightDismissEnabled="True" PlacementMargin="0 10 0 0" x:Name="MessageTip">
            <InfoBar IsOpen="True" VerticalAlignment="Center" IsClosable="False" x:Name="MessageBar"/>
        </TeachingTip>
    </Grid>
</Page>
